<?xml version="1.0"? encoding="utf-8">
{%- import 'mrs_robots_description/sdf/components/generic_components.sdf.jinja' as generic -%}


{# teraranger_macro {--> #}
{%- macro teraranger_macro(parent_link, x, y, z, roll, pitch, yaw, mount, spawner_args) -%}

  {%- set spawner_keyword = 'enable-teraranger' -%}
  {%- set spawner_description = 'Add a laser rangefinder (Teraranger One) pointing down' -%}
  {%- set spawner_default_args = {'update_rate': 100, 'min_range': 0.1, 'max_range': 14.0, 'noise': 0.04} -%}

  {%- if spawner_keyword in spawner_args.keys() -%}
    {{ generic.handle_spawner_args(spawner_keyword, spawner_default_args, spawner_args) }}

    {%- set sensor_name = 'teraranger' -%}

    <!-- Teraranger One {-->

    <!-- sensor {-->
    <link name="{{ sensor_name }}_link">
      <pose>{{ x }} {{ y }} {{ z }} {{ roll }} {{ pitch }} {{ yaw }}</pose>
      {{ generic.zero_inertial_macro() }}
      {{ generic.visual_colored_box_macro(sensor_name, 0.015, 0.027, 0.033, 'Yellow', 0, 0, 0, 0, 0, 0) }}
      {{ generic.rangefinder_sensor_macro(
        name = sensor_name,
        parent_frame_name = spawner_args['name'] + '/fcu',
        sensor_frame_name = spawner_args['name'] + '/' + sensor_name,
        topic = sensor_name + '/range',
        update_rate = spawner_args[spawner_keyword]['update_rate'],
        samples = 1,
        fov = 0.03,
        min_distance = spawner_args[spawner_keyword]['min_range'],
        max_distance = spawner_args[spawner_keyword]['max_range'],
        resolution = 0.005,
        noise = spawner_args[spawner_keyword]['noise'],
        x = x,
        y = y,
        z = z,
        roll = roll,
        pitch = pitch,
        yaw = yaw)
      }}
    </link>

    <joint name="{{ sensor_name }}_joint" type="fixed">
      <parent>{{ parent_link }}</parent>
      <child>{{ sensor_name}}_link</child>
    </joint>
    <!--}-->

    <!-- mount {-->
    {{ mount if mount }}
    <!--}-->

    <!--}-->

  {%- endif -%}
{%- endmacro -%}
{# <!--}--> #}

{# teraranger_evo_tower_macro {--> #}
{%- macro teraranger_evo_tower_macro(parent_link, visualize, frame_name, parent_frame_name, gaussian_noise, x, y, z, roll, pitch, yaw, spawner_args) -%}

  {%- set spawner_keyword = 'enable-teraranger-evo-tower' -%}
  {%- set spawner_description = 'Add the Teraranger Evo Tower laser scanner to the vehicle' -%}
  {%- set spawner_default_args = none -%}

  {%- if spawner_keyword in spawner_args.keys() -%}
    {{ generic.handle_spawner_args(spawner_keyword, spawner_default_args, spawner_args) }}

    {# -- parameters of sensors -- (id, x, y, z, roll, pitch, yaw) #}
    {%- set sensor_parameters = [(0,  0.046,  0.0,   0.001, 0.0, 0.0,  0.0),
                                 (1,  0.032,  0.032, 0.001, 0.0, 0.0,  math.radians(45)),
                                 (2,  0.000,  0.046, 0.001, 0.0, 0.0,  math.radians(90)),
                                 (3, -0.032,  0.032, 0.001, 0.0, 0.0,  math.radians(135)),
                                 (4, -0.046,  0.000, 0.001, 0.0, 0.0,  math.radians(180)),
                                 (5, -0.032, -0.032, 0.001, 0.0, 0.0, -math.radians(135)),
                                 (6,  0.000, -0.046, 0.001, 0.0, 0.0, -math.radians(90)),
                                 (7,  0.032, -0.032, 0.001, 0.0, 0.0, -math.radians(45))] -%}

    <!-- Teraranger Evo Tower {-->
    <link name="teraranger_evo_tower_link">
      <pose>{{ x }} {{ y }} {{ z }} {{ roll }} {{ pitch }} {{ yaw }}</pose>
      {{ generic.zero_inertial_macro() }}
      <visual name="visual">
        <pose>0 0 -0.014 0 0 0</pose>
        <geometry>
          <cylinder>
            <length>0.001</length>
            <radius>0.06</radius>
          </cylinder>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Black</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>

      {%- for id_, x_, y_, z_, roll_, pitch_, yaw_ in sensor_parameters -%}
        <!-- teraranger sensor {{ id_ }} {-->
        {{ generic.teraranger_evo_macro(
          parent_link = parent_link,
          id = id_,
          visualize = visualize,
          frame_name = frame_name,
          parent_frame_name = parent_frame_name,
          gaussian_noise = gaussian_noise,
          x = x_,
          y = y_,
          z = z_,
          roll = roll_,
          pitch = pitch_,
          yaw = yaw_)
        }}
        <!--}-->
      {%- endfor -%}
    </link>

    <joint name="teraranger_evo_tower_joint" type="fixed">
      <parent>{{ parent_link }}</parent>
      <child>teraranger_evo_tower_link</child>
    </joint>
    <!--}-->

  {%- endif -%}
{%- endmacro -%}
{# <!--}--> #}