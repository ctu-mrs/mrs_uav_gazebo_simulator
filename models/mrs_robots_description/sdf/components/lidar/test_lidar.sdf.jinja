<?xml version="1.0"? encoding="utf-8">

{# lidar_test_macro {--> #}
{%- macro lidar_test_macro(parent_link, x, y, z, roll, pitch, yaw, mount, spawner_args) -%}

  {%- set spawner_keyword = 'enable-lidar-test' -%}
  {%- set spawner_description = 'Add the general LIDAR laser scanner. Do not set range outside <0.10 - 15.0> (unrealistic)' -%}
  {%- set spawner_default_args = {'horizontal_samples': 1600, 'update_rate': 20.0, 'min_range': 0.15, 'max_range': 14.0, 'noise': 0.01} -%}

  {%- if spawner_keyword in spawner_args.keys() -%}
    {{ generic.handle_spawner_args(spawner_keyword, spawner_default_args, spawner_args) }}

    {%- set sensor_name = 'lidar_test' -%}

    <!-- lidar_test A3 {-->
    <link name="{{ sensor_name }}_link">
      <pose>{{ x }} {{ y }} {{ z }} {{ roll }} {{ pitch }} {{ yaw }}</pose>
      {{ generic.zero_inertial_macro() }}

      <!-- visuals {-->
      {{ generic.visual_mesh_macro(
        name = 'base_visual',
        mesh_file = 'model://mrs_robots_description/meshes/sensors/rplidar.stl',
        mesh_scale = '0.001 0.001 0.001',
        color = 'FlatBlack',
        x = 0,
        y = 0,
        z = -0.029,
        roll = 0,
        pitch = 0,
        yaw = math.radians(180))
      }}
      <visual name="purple_visual">
        <pose>0 0 -0.011 0 0 0</pose>
        <geometry>
          <cylinder>
            <length>0.001</length>
            <radius>0.038</radius>
          </cylinder>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Purple</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>

      {{ generic.rangefinder_sensor_macro(
        name = sensor_name,
        parent_frame_name = spawner_args['name'] + '/fcu',
        sensor_frame_name = spawner_args['name'] + '/' + sensor_name,
        topic = sensor_name + '/range',
        update_rate = spawner_args[spawner_keyword]['update_rate'],
        samples = 1,
        fov = 0.03,
        min_distance = spawner_args[spawner_keyword]['min_range'],
        max_distance = spawner_args[spawner_keyword]['max_range'],
        resolution = 0.005,
        noise = spawner_args[spawner_keyword]['noise'],
        x = x,
        y = y,
        z = z,
        roll = roll,
        pitch = pitch,
        yaw = yaw)
      }}

    </link>

    <joint name="{{ sensor_name }}_joint" type="fixed">
      <parent>{{ parent_link }}</parent>
      <child>{{ sensor_name }}_link</child>
    </joint>
      <!--}-->

    <!-- mount {-->
    {{ mount if mount }}
    <!--}-->

    <!--}-->

  {%- endif -%}
{%- endmacro -%}
{# <!--}--> #}

